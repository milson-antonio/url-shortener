name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: JDK Configuration
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Install Maven
        run: sudo apt-get install -y maven

      - name: Build app
        run: mvn package

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: JDK Configuration
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Install Maven
        run: sudo apt-get install -y maven

      - name: Run tests
        run: mvn test

  docker_latest:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/url-shortener:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/url-shortener:latest

  docker_release:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract release tag
        id: extract_tag
        run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Build Docker image with tag
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/url-shortener:${{ steps.extract_tag.outputs.tag }} .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/url-shortener:${{ steps.extract_tag.outputs.tag }}
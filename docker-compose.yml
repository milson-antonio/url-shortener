services:
  postgres:
    image: postgres:17-alpine
    container_name: url-shortener-postgres
    environment:
      POSTGRES_DB: url-shortener-db
      POSTGRES_USER: milsondev
      POSTGRES_PASSWORD: 5e796cf3fc50
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U milsondev -d url-shortener-db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dkb-code-factory

  redis:
    image: redis:7-alpine
    container_name: url-shortener-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dkb-code-factory

  url-shortener:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: url-shortener-api
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/url-shortener-db
      SPRING_DATASOURCE_USERNAME: milsondev
      SPRING_DATASOURCE_PASSWORD: 5e796cf3fc50
      SPRING_DATA_REDIS_HOST: redis
    command: sh -c "sleep 20 && java -jar app.jar"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dkb-code-factory

  # optional front-end for an easy way to test
  # it's pulled from my docker hub public repo
  url-shortener-front-end:
    image: milsona/dkbcodefactory-url-shortener-front-end:1.0
    container_name: url-shortener-front-end
    ports:
      - "8080:8080"
    environment:
      - url.shortner.api=http://url-shortener:8081/api/v1/urls
    depends_on:
      - url-shortener
    networks:
      - dkb-code-factory

volumes:
  postgres-data:
  redis-data:

networks:
  dkb-code-factory:
    driver: bridge